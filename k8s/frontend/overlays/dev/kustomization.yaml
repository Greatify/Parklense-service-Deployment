apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: dev-parklens
resources:
  - ../../base
patches:
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: parklens-frontend
        labels:
          app: parklens-frontend
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: parklens-frontend
        template:
          metadata:
            labels:
              app: parklens-frontend
          spec:
            containers:
              - name: parklens-frontend
                image: "parklens-frontend:dev"
                imagePullPolicy: Always
                resources:
                  requests:
                    cpu: "500m"
                    memory: "500Mi"
                  limits:
                    cpu: "1"
                    memory: "1Gi"
                ports:
                  - containerPort: 80
    target:
      kind: Deployment
      name: parklens-frontend
  - patch: "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: frontend-nginx-config\ndata:\n  nginx.conf: |\n    worker_processes auto;\n\n    events {\n        worker_connections 10000;\n        multi_accept on;\n        use epoll;\n    }\n\n    http {\n        include /etc/nginx/mime.types;\n        default_type application/octet-stream;\n\n        server_tokens off;\n\n        log_format security '$remote_addr - $remote_user [$time_local] \"$request\" '\n                          '$status $body_bytes_sent \"$http_referer\" '\n                          '\"$http_user_agent\" \"$http_x_forwarded_for\" '\n                          '$request_time $upstream_response_time '\n                          '$http_x_real_ip $http_x_forwarded_proto';\n\n        access_log /var/log/nginx/access.log security;\n        error_log /var/log/nginx/error.log warn;\n\n        sendfile on;\n        tcp_nopush on;\n        tcp_nodelay on;\n        keepalive_timeout 65;\n        types_hash_max_size 2048;\n\n        client_body_timeout 10s;\n        client_header_timeout 10s;\n        send_timeout 10s;\n\n        client_body_buffer_size 128k;\n        client_header_buffer_size 1k;\n        client_max_body_size 10m;\n        large_client_header_buffers 4 4k;\n\n        limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n        limit_conn_zone $binary_remote_addr zone=addr:10m;\n        limit_conn addr 100;\n\n        add_header X-Frame-Options \"SAMEORIGIN\" always;\n        add_header X-Content-Type-Options \"nosniff\" always;\n        add_header X-XSS-Protection \"1; mode=block\" always;\n        add_header Referrer-Policy \"strict-origin-when-cross-origin\" always;\n        add_header Permissions-Policy \"geolocation=(), microphone=(), camera=(), fullscreen=(self)\" always;\n        add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\" always;\n        add_header X-Permitted-Cross-Domain-Policies \"none\" always;\n        add_header X-Download-Options \"noopen\" always;\n        add_header X-DNS-Prefetch-Control \"off\" always;\n        add_header X-Powered-By \"\" always;\n        add_header Server \"\" always;\n        add_header X-Runtime \"\" always;\n        add_header X-Version \"\" always;\n        add_header X-Application-Version \"\" always;\n\n        add_header Cache-Control \"no-store, no-cache, must-revalidate\" always;\n        add_header Pragma \"no-cache\" always;\n        add_header Expires 0 always;\n\n        add_header Content-Security-Policy \"\n            default-src 'self';\n            script-src 'self' 'unsafe-inline' https://accounts.google.com https://*.posthog.com https://*.i.posthog.com;\n            style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://accounts.google.com;\n            font-src 'self' https://fonts.gstatic.com data: https://*.parklensedev.com https://parklensedev.com;\n            img-src 'self' data: https://cdn.jsdelivr.net https://*.s3.amazonaws.com https://*.amazonaws.com https://*.parklensedev.com;\n            object-src 'none';\n            connect-src 'self' https://parklensedev.com https://*.parklensedev.com https://*.posthog.com https://*.i.posthog.com data:;\n            frame-src 'self' https://accounts.google.com;\n            worker-src 'self' blob: data:;\n            frame-ancestors 'self';\n        \" always;\n\n        gzip on;\n        gzip_comp_level 6;\n        gzip_min_length 1000;\n        gzip_proxied any;\n        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;\n        gzip_vary on;\n\n        server {\n            listen 80;\n            http2 on;\n            server_name localhost;\n\n            server_tokens off;\n\n            root /usr/share/nginx/html;\n            index index.html;\n\n            add_header X-Frame-Options \"SAMEORIGIN\" always;\n            add_header X-Content-Type-Options \"nosniff\" always;\n            add_header X-XSS-Protection \"1; mode=block\" always;\n            add_header Referrer-Policy \"strict-origin-when-cross-origin\" always;\n            add_header Permissions-Policy \"geolocation=(), microphone=(), camera=(), fullscreen=(self)\" always;\n            add_header X-Powered-By \"\" always;\n            add_header Server \"\" always;\n            add_header X-Runtime \"\" always;\n            add_header X-Version \"\" always;\n            add_header X-Application-Version \"\" always;\n\n            add_header Cache-Control \"no-store, no-cache, must-revalidate\" always;\n            add_header Pragma \"no-cache\" always;\n            add_header Expires 0 always;\n\n            limit_req zone=one burst=10 nodelay;\n            limit_conn addr 100;\n\n            if ($request_method = TRACE) {\n                return 403;\n            }\n\n            location = /health {\n                return 200 'OK';\n                add_header Content-Type text/plain;\n                add_header X-Content-Type-Options \"nosniff\" always;\n                add_header X-Frame-Options \"SAMEORIGIN\" always;\n                add_header X-Powered-By \"\" always;\n                add_header Server \"\" always;\n            }\n\n            location / {\n                try_files $uri $uri/ /index.html;\n\n                if ($request_filename !~ \"^/usr/share/nginx/html/\") {\n                    return 403;\n                }\n                \n                autoindex off;\n                \n                location ~* \\.(html|css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {\n                    try_files $uri =404;\n                }\n\n                if ($request_method = 'OPTIONS') {\n                    add_header 'Access-Control-Allow-Origin' $http_origin;\n                    add_header 'Access-Control-Allow-Methods' 'GET, HEAD, PUT, POST, PATCH, OPTIONS';\n                    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Database-Choice';\n                    add_header 'Access-Control-Allow-Credentials' 'true';\n                    add_header 'Access-Control-Expose-Headers' 'Correlation-ID';\n                    add_header 'Access-Control-Max-Age' 1728000;\n                    add_header 'Content-Type' 'text/plain; charset=utf-8';\n                    add_header 'Content-Length' 0;\n                    add_header X-Frame-Options \"SAMEORIGIN\" always;\n                    add_header X-Powered-By \"\" always;\n                    add_header Server \"\" always;\n                    return 204;\n                }\n\n                if ($http_origin ~ '^https?://(parklensedev\\.com|.*\\.parklensedev\\.com)$') {\n                    add_header 'Access-Control-Allow-Origin' $http_origin always;\n                }\n\n                add_header 'Access-Control-Allow-Methods' 'GET, HEAD, PUT, POST, PATCH, OPTIONS' always;\n                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Database-Choice' always;\n                add_header 'Access-Control-Allow-Credentials' 'true' always;\n                add_header 'Access-Control-Expose-Headers' 'Correlation-ID' always;\n                add_header X-Frame-Options \"SAMEORIGIN\" always;\n                add_header X-Powered-By \"\" always;\n                add_header Server \"\" always;\n\n                proxy_cookie_path / \"/; HttpOnly; Secure; SameSite=Strict\";\n                proxy_cookie_path /api/ \"/; HttpOnly; Secure; SameSite=Strict\";\n            }\n\n            location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {\n                expires 30d;\n                add_header Cache-Control \"public, max-age=2592000\" always;\n                add_header X-Content-Type-Options \"nosniff\" always;\n                add_header X-Frame-Options \"SAMEORIGIN\" always;\n                add_header X-Powered-By \"\" always;\n                add_header Server \"\" always;\n            }\n\n            location ~ /\\.(?!well-known).* {\n                deny all;\n                access_log off;\n                log_not_found off;\n            }\n\n            location ~* \\.(php|js|ts|jsx|tsx|map|log|git|env|DS_Store|swp|bak|old|zip|config|json|md|txt|sql|yml|yaml|xml|ini|conf|sh|bash|exe|dll|so|dylib|class|jar|war|ear|zip|tar|gz|rar|7z)$ {\n                deny all;\n                access_log off;\n                log_not_found off;\n            }\n\n            location ~* /(node_modules|\\.git|\\.svn|\\.hg|\\.idea|\\.vscode|\\.env|config|src|tests|coverage|dist|build|logs|temp|tmp|cache)/ {\n                deny all;\n                access_log off;\n                log_not_found off;\n            }\n\n            error_page 404 /404.html;\n            error_page 500 502 503 504 /50x.html;\n            location = /404.html {\n                internal;\n                root /usr/share/nginx/html;\n                add_header X-Content-Type-Options \"nosniff\" always;\n                add_header X-Frame-Options \"SAMEORIGIN\" always;\n                add_header X-Powered-By \"\" always;\n                add_header Server \"\" always;\n            }\n            location = /50x.html {\n                internal;\n                root /usr/share/nginx/html;\n                add_header X-Content-Type-Options \"nosniff\" always;\n                add_header X-Frame-Options \"SAMEORIGIN\" always;\n                add_header X-Powered-By \"\" always;\n                add_header Server \"\" always;\n            }\n        }\n    }"
    target:
      kind: ConfigMap
      name: frontend-nginx-config
spec:
  template:
    spec:
      containers:
        - image: 399600302704.dkr.ecr.ap-south-1.amazonaws.com/parklens-frontend:Create__env_to_check_build-20250729-091217-aba9c18
