apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: dev-parklense

resources:
  - ../../base

# Environment-specific labels
labels:
  - pairs:
      environment: development
      tier: dev
    includeSelectors: false

# Patches for dev environment
patches:
  # Frontend Deployment patches
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: parklens-frontend
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: parklens-frontend
        template:
          metadata:
            labels:
              app: parklens-frontend
          spec:
            containers:
            - name: parklens-frontend
              image: 399600302704.dkr.ecr.ap-south-1.amazonaws.com/parklens-frontend:updated_barcode-20250730-164231-5330dbe
              imagePullPolicy: Always
              ports:
              - containerPort: 80
              livenessProbe:
                httpGet:
                  path: /health
                  port: 80
                initialDelaySeconds: 30
                periodSeconds: 10
              readinessProbe:
                httpGet:
                  path: /health
                  port: 80
                initialDelaySeconds: 5
                periodSeconds: 5
              startupProbe:
                httpGet:
                  path: /health
                  port: 80
                failureThreshold: 30
                periodSeconds: 10
              resources:
                requests:
                  cpu: "0.5"
                  memory: "512Mi"
                limits:
                  cpu: "1"
                  memory: "1Gi"
    target:
      kind: Deployment
      name: parklens-frontend

  # Ingress patches
  - patch: |-
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: parklens-ingress
        annotations:
          alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:399600302704:certificate/6eb37406-7e5c-4612-9761-e49fcb1d3bf3
          alb.ingress.kubernetes.io/cors-allow-origin: >-
            https://parklensedev.com,https://*.parklensedev.com
          alb.ingress.kubernetes.io/load-balancer-name: parklens-frontend-dev-alb
          alb.ingress.kubernetes.io/load-balancer-attributes: >-
            idle_timeout.timeout_seconds=60,deletion_protection.enabled=false
      spec:
        rules:
        - host: parklensedev.com
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: parklens-frontend-service
                  port:
                    number: 80
        tls:
          - hosts:
              - parklensedev.com
            secretName: parklens-frontend-tls
    target:
      kind: Ingress
      name: parklens-ingress

  # ConfigMap patches for nginx configuration
  - patch: |-
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: frontend-nginx-config
      data:
        nginx.conf: |
          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log warn;
          pid /var/run/nginx.pid;
          
          events {
              worker_connections 1024;
              use epoll;
              multi_accept on;
          }
          
          http {
              include /etc/nginx/mime.types;
              default_type application/octet-stream;
              
              # Logging
              log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';
              access_log /var/log/nginx/access.log main;
              
              # Basic settings
              sendfile on;
              tcp_nopush on;
              tcp_nodelay on;
              keepalive_timeout 65;
              types_hash_max_size 2048;
              client_max_body_size 100M;
              
              # Gzip compression
              gzip on;
              gzip_vary on;
              gzip_min_length 1024;
              gzip_proxied any;
              gzip_comp_level 6;
              gzip_types
                  text/plain
                  text/css
                  text/xml
                  text/javascript
                  application/json
                  application/javascript
                  application/xml+rss
                  application/atom+xml
                  image/svg+xml;
              
              # Security headers
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header X-XSS-Protection "1; mode=block" always;
              add_header Referrer-Policy "strict-origin-when-cross-origin" always;
              add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.parklensedev.com https://vehicle.parklensedev.com; frame-ancestors 'self';" always;
              
              server {
                  listen 80;
                  server_name parklensedev.com;
                  root /usr/share/nginx/html;
                  index index.html index.htm;
                  
                  # Health check endpoint
                  location /health {
                      access_log off;
                      return 200 "healthy\n";
                      add_header Content-Type text/plain;
                  }
                  
                  # Static files with caching
                  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                      expires 1y;
                      add_header Cache-Control "public, immutable";
                      add_header X-Content-Type-Options nosniff;
                      try_files $uri =404;
                  }
                  
                  # HTML files - no cache
                  location ~* \.html$ {
                      expires -1;
                      add_header Cache-Control "no-cache, no-store, must-revalidate";
                      add_header Pragma "no-cache";
                      try_files $uri =404;
                  }
                  
                  # Default location - serve React app
                  location / {
                      try_files $uri $uri/ /index.html;
                      add_header Cache-Control "no-cache, no-store, must-revalidate";
                      add_header Pragma "no-cache";
                      add_header Expires "0";
                  }
                  
                  # Error pages
                  error_page 404 /index.html;
                  error_page 500 502 503 504 /50x.html;
                  location = /50x.html {
                      root /usr/share/nginx/html;
                  }
              }
          }
    target:
      kind: ConfigMap
      name: frontend-nginx-config
