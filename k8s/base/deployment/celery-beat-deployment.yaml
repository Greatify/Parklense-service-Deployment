apiVersion: apps/v1
kind: Deployment
metadata:
  name: parklense-auth-celery-beat
  labels:
    app: parklense-auth-celery-beat
    component: celery-beat
spec:
  replicas: 1 # Only one beat scheduler should run
  strategy:
    type: Recreate # Ensure only one instance runs at a time
  selector:
    matchLabels:
      app: parklense-auth-celery-beat
      component: celery-beat
  template:
    metadata:
      labels:
        app: parklense-auth-celery-beat
        component: celery-beat
    spec:
      serviceAccountName: parklense-auth-secret-sa
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: parklense-auth-secrets-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: parklense-auth-backend-secrets
        - name: logs-volume
          emptyDir: {}
        # - name: beat-schedule
        #   persistentVolumeClaim:
        #     claimName: parklense-auth-beat-pvc
        - name: beat-schedule
          emptyDir: {}
      containers:
        - name: celery-beat
          image: 399600302704.dkr.ecr.ap-south-1.amazonaws.com/parklense-auth-service:Refactor_GitHub_Actions_workfl-20250711-073045-4febf04
          imagePullPolicy: Always
          command:
            - celery
            - -A
            - config.celery
            - beat
            - -l
            - info
            - --scheduler
            - django_celery_beat.schedulers:DatabaseScheduler
            - --pidfile=/tmp/celerybeat.pid
          resources:
            requests:
              cpu: "0.5"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "config.settings.production"
            - name: REDIS_URL
              value: "redis://redis-service:6379"
            - name: POSTGRES_HOST
              value: "postgres-service"
            - name: POSTGRES_PORT
              value: "5432"
          volumeMounts:
            - name: parklense-auth-secrets-volume
              mountPath: /mnt/secret-store
              readOnly: true
            - name: logs-volume
              mountPath: /app/logs
            - name: beat-schedule
              mountPath: /tmp
          lifecycle:
            postStart:
              exec:
                command: ["sh", "-c", "cp -R /mnt/secret-store/.env /app/.env"]
            preStop:
              exec:
                command: ["sh", "-c", "rm -f /tmp/celerybeat.pid"]
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "test -f /tmp/celerybeat.pid && kill -0 $(cat /tmp/celerybeat.pid)"
            initialDelaySeconds: 60
            timeoutSeconds: 30
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "test -f /tmp/celerybeat.pid"
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
