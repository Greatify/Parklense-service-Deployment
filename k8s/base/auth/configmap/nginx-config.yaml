apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user www-data;
    worker_processes auto;
    worker_rlimit_nofile 65535;
    pid /var/run/nginx.pid;

    events {
        worker_connections 65535;
        multi_accept on;
        use epoll;
    }

    http {
        # Basic Settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 600s;
        keepalive_requests 1000;
        reset_timedout_connection on;
        client_max_body_size 2048M;

        # Hide nginx version
        server_tokens off;

        # Timeout settings
        client_body_timeout 600s;
        client_header_timeout 600s;
        send_timeout 600s;
        
        # Buffer size settings
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;
        output_buffers 1 32k;
        postpone_output 1460;

        # MIME Types Configuration
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # MIME Types Settings
        types_hash_max_size 2048;
        types_hash_bucket_size 64;

        # Hash table settings
        server_names_hash_bucket_size 256;
        variables_hash_max_size 2048;

        # Logging Settings
        access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
        error_log /var/log/nginx/error.log warn;

        # Gzip Settings
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rss+xml
            application/vnd.geo+json
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/x-web-app-manifest+json
            application/xhtml+xml
            application/xml
            font/opentype
            font/woff
            font/woff2
            image/bmp
            image/svg+xml
            image/x-icon
            text/cache-manifest
            text/css
            text/plain
            text/vcard
            text/vnd.rim.location.xloc
            text/vtt
            text/x-component
            text/x-cross-domain-policy;

        include /etc/nginx/conf.d/*.conf;

        # Define maps for request validation
        map $request_method $is_write_method {
            POST    1;
            PUT     1;
            PATCH   1;
            default 0;
        }

        map $http_content_type $is_valid_content_type {
            "application/json"                          1;
            "multipart/form-data"                       1;
            "~^multipart/form-data; boundary=.*"        1;
            "application/x-www-form-urlencoded"         1;
            default                                     0;
        }

        # Combined validation map
        map "$is_write_method:$is_valid_content_type" $needs_validation {
            "1:0"   1;
            default 0;
        }
    }

  default.conf: |
    upstream backend {
        server 127.0.0.1:8000;
        keepalive 32;
    }

    server {
        listen 80;
        server_name _;
        root /app;
        index index.html;

        server_tokens off;
        
        # Enhanced Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self'; form-action 'self';" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Cookie security settings
        proxy_cookie_path / "/; HttpOnly; Secure; SameSite=Strict";

        # Invalid content type error response
        location @invalid_content_type {
            internal;
            default_type application/json;
            return 400 '{"status":{"code":400,"response":"failed"},"error":true,"message":"Invalid Content-Type. API endpoints only accept application/json, multipart/form-data or application/x-www-form-urlencoded"}';
        }

        # API endpoints
        location /api/ {
            # Cookie security settings for API
            proxy_cookie_path /api/ "/api/; HttpOnly; Secure; SameSite=Strict";
            
            error_page 418 = @invalid_content_type;
            if ($needs_validation) {
                return 418;
            }

            # Block common attack patterns
            if ($request_uri ~* "\.(php|asp|aspx|jsp|cgi)$") {
                return 403;
            }

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass client certificate information to Django
            proxy_set_header SSL-Client-Verify $ssl_client_verify;
            proxy_set_header SSL-Client-DN $ssl_client_s_dn;
            proxy_set_header SSL-Client-Cert $ssl_client_cert;
            
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;

            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Error handling
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;
        location = /error.html {
            root /app/static/error;
            internal;
        }

        # drf-spectacular Swagger UI static files
        location /static/drf_spectacular_sidecar/ {
            alias /app/staticfiles/drf_spectacular_sidecar/;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            add_header Access-Control-Allow-Origin *;
            try_files $uri $uri/ =404;
        }

        # Swagger UI static files (drf-yasg - keeping for backwards compatibility)
        location /api/static/drf-yasg/ {
            alias /app/staticfiles/drf-yasg/;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            try_files $uri $uri/ =404;
        }

        # Static files
        location /static/ {
            alias /app/staticfiles/;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            add_header Access-Control-Allow-Origin *;
            try_files $uri $uri/ =404;
        }

        # Media files
        location /media/ {
            alias /app/media/;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            try_files $uri $uri/ =404;
        }

        # Main application
        location / {
            proxy_pass http://backend;
            proxy_redirect off;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass client certificate information to Django
            proxy_set_header SSL-Client-Verify $ssl_client_verify;
            proxy_set_header SSL-Client-DN $ssl_client_s_dn;
            proxy_set_header SSL-Client-Cert $ssl_client_cert;
            
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;

            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }
    } 