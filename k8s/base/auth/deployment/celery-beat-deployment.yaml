apiVersion: apps/v1
kind: Deployment
metadata:
  name: parklense-auth-celery-beat
  labels:
    app: parklense-auth-celery-beat
    component: celery-beat
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: parklense-auth-celery-beat
      component: celery-beat
  template:
    metadata:
      labels:
        app: parklense-auth-celery-beat
        component: celery-beat
    spec:
      serviceAccountName: parklense-auth-secret-sa
      terminationGracePeriodSeconds: 30
      # securityContext:
      #   runAsNonRoot: true
      #   runAsUser: 1000
      #   runAsGroup: 1000
      #   fsGroup: 1000
      volumes:
        - name: parklense-auth-secrets-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: parklense-auth-backend-secrets
        - name: parklense-auth-storage
          emptyDir: {}
        - name: logs-volume
          emptyDir: {}
        - name: beat-schedule
          emptyDir: {}
          # Removed hosts-volume
      containers:
        - name: parklense-auth-celery-beat
          image: 399600302704.dkr.ecr.ap-south-1.amazonaws.com/parklense-auth-service:Merge_pull_request__7_from_Gre-20250726-104416-e753f6a
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "0.5"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "config.settings.production"
            - name: REDIS_URL
              value: "redis://redis-service:6379/0"
            - name: CELERY_BROKER_URL
              value: "redis://redis-service:6379/0"
            - name: DJANGO_REDIS_PARSER_CLASS
              value: "redis.connection.DefaultParser"
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: DJANGO_LOG_LEVEL
              value: "DEBUG"
            - name: CELERY_LOG_LEVEL
              value: "DEBUG"
          envFrom:
            - configMapRef:
                name: parklense-env-config
          command:
            - celery
            - -A
            - config.celery
            - beat
            - -l
            - debug
            - --scheduler
            - django_celery_beat.schedulers:DatabaseScheduler
          volumeMounts:
            - name: parklense-auth-secrets-volume
              mountPath: /mnt/secret-store
              readOnly: true
            - name: parklense-auth-storage
              mountPath: /app/media
            - name: logs-volume
              mountPath: /app/logs
            - name: beat-schedule
              mountPath: /app/celerybeat-schedule
              # Removed hosts-volume mount
          lifecycle:
            postStart:
              exec:
                command: ['sh', '-c', 'cp -R /mnt/secret-store/.env /app/.env']
          # securityContext:
          #   allowPrivilegeEscalation: false
          #   readOnlyRootFilesystem: false
          #   capabilities:
          #     drop:
          #       - ALL
          #   runAsNonRoot: true
          #   runAsUser: 1000
          #   runAsGroup: 1000
