apiVersion: apps/v1
kind: Deployment
metadata:
  name: parklense-auth-redis
  labels:
    app: parklense-auth-redis
    component: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: parklense-auth-redis
      component: redis
  template:
    metadata:
      labels:
        app: parklense-auth-redis
        component: redis
    spec:
      serviceAccountName: parklense-auth-secret-sa
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      volumes:
        # - name: redis-data
        #   persistentVolumeClaim:
        #     claimName: parklense-auth-redis-pvc
        - name: redis-data
          emptyDir: {}
        - name: redis-config
          configMap:
            name: redis-config
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          command:
            - redis-server
            - /etc/redis/redis.conf
          resources:
            requests:
              cpu: "0.5"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          ports:
            - containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_REPLICATION_MODE
              value: "master"
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          # securityContext:
          #   allowPrivilegeEscalation: false
          #   readOnlyRootFilesystem: false
          #   capabilities:
          #     drop:
          #       - ALL
          #   runAsNonRoot: true
          #   runAsUser: 999
          #   runAsGroup: 999

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  labels:
    app: parklense-auth-redis
    component: redis
data:
  redis.conf: |
    # Redis configuration for Parklense Auth
    
    # Network
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    
    # General
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    databases 16
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # Replication
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-disable-tcp-nodelay no
    replica-priority 100
    
    # Security
    protected-mode no
    
    # Memory management
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    
    # Append only file
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    
    # Lua scripting
    lua-time-limit 5000
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
    # Advanced config
    hz 10
    dynamic-hz yes
    aof-rewrite-incremental-fsync yes 